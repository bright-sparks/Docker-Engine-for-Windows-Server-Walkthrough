{"name":"Walkthrough: Docker Engine for Windows Server","tagline":"Step-by-step walk through for getting started with Docker Engine for Windows Server","body":"By now, we've all seen the posts and [tweets](https://twitter.com/windowsserver) from the IT blogosphere, heralding the arrival of Docker for Windows.  Now, to be clear: the ecosystem of Docker tools for Windows is nothing new.  Tools such as  [Boot2Docker](http://boot2docker.io/), [Kitematic](https://kitematic.com/), and the [Docker Client for Windows](https://azure.microsoft.com/blog/2015/04/16/docker-client-for-windows-is-now-available/) have been around for a while, and their collective functionality for Windows has recently been rolled up into [Docker Toolbox](https://www.docker.com/toolbox).  While these tools don’t really provide the full, native Docker experience on Windows, they do provide:\r\n\r\n* a gateway drug Docker experience for Windows/Mac users, inside a Linux VM.\r\n* the ability to manage a Linux Docker host from a Windows/Mac workstations.\r\n* a means by which software developers, operations engineers, QA, and other IT staff can work with Docker containers idempotently using Windows/Mac workstations.\r\n\r\nUntil very recently, it was not possible to use a Windows Server platform to host the Docker Engine without adding an additional layer of virtualization.  That all changed with the recent [release](https://blog.docker.com/2015/08/tp-docker-engine-windows-server-2016/) of Windows Server 2016 TP3, which provides a bona-fide Docker daemon running natively on an actual Windows Server host.  To many, this is the long awaited missing piece that clears the path to using Docker containers, tools, and workflows in production Windows environments.\r\n\r\nDocker Engine for Windows Server requires Windows Server 2016, which is currently only in the Technical Preview 3 release stage.  Like most bleeding-edge projects, Docker Engine for Windows Server is still very much in the skunkworks phase.  The current set of official documentation is sparse, fragmented, and a bit elusive.  In this walkthrough, we will outline the end-to-end steps required to quickly get up and running Docker Engine for Windows Server, from host OS install through your first `docker run` command.\r\n\r\nGo ahead and skip to the **Walkthrough:** section below, but circle back here during progress bar breaks to read these key points about Docker Engine for Windows Server, gleaned from the Windows Server team at DockerCon:\r\n\r\n* **There will be no cross platform containerization**.  Since Docker/libcontainer/LXC/etc are not hypervisors, and containers are not VMs, there is currently no way to present the appropriate kernel to a container from another platform.  Windows containers will require a Windows Docker host, and Linux containers will require a Linux Docker host.  The Windows Server Containers reuse the host kernel and create a sandboxed environment for the process, exactly like it does on Linux.  Unless there is an unlikely fundamental change in one or both platforms (e.g. adopting a common kernel), cross platform containerization will simply never be a thing.\r\n\r\n* **There will be two types of containers on Windows**.  “Windows Containers” work just like Docker containers.  “Hyper-V Containers” are [something different...](http://windowsitpro.com/windows-server-2016/differences-between-windows-containers-and-hyper-v-containers-windows-server-201)\r\n\r\n* **There will be two ways to manage containers in Windows**.   Windows Containers can be created and managed through either Docker or Powershell.  Containers created with PowerShell cannot currently be managed with Docker and visa versa.\r\n\r\n* **Windows Nano Server**.  [Nano Server ](http://www.computerweekly.com/news/2240242818/Microsofts-Nano-Server-What-to-expect-from-this-leaner-meaner-Windows-Server)is stripped-down version of Windows Server 2016, optimized for running containers.  In the Linux Docker world, think CoreOS, RHEL Atomic Host and Ubuntu Snappy.  [Apparently ](http://blogs.technet.com/b/nanoserver/archive/2015/05/12/welcome-to-the-new-nano-server-blog.aspx)the Windows Server Technical Preview 2 .iso contained a Nano Server folder in the image, as well a deployment guide.  I did not check the TP3 .iso, mostly because the current [process](http://www.happysysadm.com/2015/06/how-to-build-your-first-fantastic-nano.html) to provision a Nano instance looks like a blunderous and buggy PITA.  I remain interested in duplicating the process outlined here on Windows Nano Server, perhaps another day...\r\n  \r\n\r\n# Walkthrough: Getting Started with Docker Engine for Windows Server\r\n\r\n## Install Windows Server 2016 TP3 (Core)\r\n\r\n1. [Download ](https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-technical-preview)the .iso for Windows Server 2016 TP3.  This requires registration for a TechNet account as well as additional registration for the evaluation download.  Only the .iso is required, you do not need to download the .wim file.\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/1.PNG)\r\n\r\n\r\n1. Before installing, note the following install options:\r\n\r\n    **Bare metal:** create bootable DVD/USB and complete a bare metal install.\r\n\r\n    **VM:** create a 64-bit virtual machine in VirtualBox/HyperV/vmWare/etc.  For this walkthrough, we will be using vmWare ESXi.\r\n\r\n    **Cloud instance:** At this time, AWS EC2 does not offer an AMI for Windows Server 2016 TP3 with Windows Server Containers, however (of course) [Azure](https://msdn.microsoft.com/virtualization/windowscontainers/quick_start/azure_setup) does.  YMMV on other cloud platforms.\r\n\r\n1. [According](http://blogs.msdn.com/b/virtual_pc_guy/archive/2015/08/20/do-you-need-hyper-v-to-try-windows-containers.aspx?wt.mc_id=WW_CE_WS_OO_SCL_TW) to Microsoft, the full (GUI) installation of Windows Server does not support containers at this point in time, and they recommend only installing Windows Server Core.  However, I have tested this install on both Full /Core, and Docker seemed to work as expected in both versions.  For this walkthrough, we will use Windows Server Core.\r\n\r\n1. Using the .iso downloaded in step 1 above, proceed to install Windows Server 2016 TP3, click “Install now” when prompted.\r\n\r\n1. To install Windows Server Core, choose “Windows Server 2016 Technical Preview 3”, not “Windows Server 2016 Technical Preview 3 (Server with Desktop Experience)”, click \"Next\".\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/2.PNG)\r\n\r\n\r\n1. Accept the license agreement, click Next.\r\n\r\n1. Choose “Custom”\r\n\r\n1. Configure your partitions, accept any dialogues about Windows Partitions, choose the largest partition created, and click “install”.\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/3.PNG)\r\n\r\n1. When the install is complete, the system will reboot.\r\n1. After reboot, you will be prompted to change the Administrator password.  Ensure “Ok” is selected, press Enter, provide and confirm a password, press Enter twice.\r\n\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/4.PNG)\r\n\r\n1. Windows will briefly set up the system for first use, and you will be presented with a command prompt.  Installation of Windows Server 2016 TP3 (Core) is complete.\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/5.PNG)\r\n\r\n## Setup Windows Server host for Containers \r\n\r\n1. At the command prompt, do `powershell.exe`\r\n1. Ensure console window looks like this:\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/6.PNG)\r\n\r\n1. If it does not (still in the powershell window) do: `start-process powershell -Verb runas`\r\n1. Do `wget -uri http://aka.ms/setupcontainers -OutFile C:\\ContainerSetup.ps1`\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/7.PNG)\r\n\r\n1. Do `C:\\ContainerSetup.ps1`\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/8.PNG)\r\n\r\n1. OS will reboot, install some features, and prompt to unlock with credentials.\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/9.PNG)\r\n\r\n\r\n1. Provide the credentials created earlier.  As soon as you login, a PowerShell session will spawn and the setup will continue.\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/10.PNG)\r\n\r\n\r\n1. During the setup process, a very large .wim file will be downloaded.  This takes a _long_ time (~45 minutes for me), and does not provide any console feedback to indicate the progress.  Don’t worry, your box is not locked up.\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/11.PNG)\r\n\r\n1. At the end of the download, the setup process will resume.\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/12.PNG)\r\n\r\n1. The setup will indicate `Installing Docker…` followed by `Script complete!`, and present you with a prompt in the PowerShell console.\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/13.PNG)\r\n\r\n## Do Docker stuff\r\n\r\n1. Do `docker version` to confirm both the client and server components were installed successfully.\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/14.PNG)\r\n\r\n1. The Technical Preview of Docker for Windows Server isn’t feature complete yet (and taking into account that the feature sets will never be exactly identical given the differences of the underlying platforms), most of the Docker commands you already know will work as expected on Windows Server.  Here’s what it thinks it can do, anyway, I’ve tested a great deal of this without any issues:\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/15.png)\r\n\r\n\r\n1. Let’s kick the tires.\r\n\r\n    `docker images`\r\n\r\n    This lists the two default Windows docker images available on the machine:\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/16.PNG)\r\n\r\n    `docker run -it --name dockerdemo windowsservercore cmd`\r\n\r\n    Now you are in a Windows Server Core container (specified by _windowsservercore_), the container is named _dockerdemo_, and you are using an interactive terminal (specfied by _-it_ and _cmd_), all running on a real Windows Server Core Docker host!\r\n\r\n    ![](https://raw.githubusercontent.com/ezeeetm/Docker-Engine-for-Windows-Server-Walkthrough/master/images/17.PNG)\r\n\r\n## Where to go from here?\r\n\r\n* [Manage Windows Server Containers with Docker](https://msdn.microsoft.com/virtualization/windowscontainers/quick_start/manage_docker)\r\n* [Manage Windows Server Containers with PowerShell](https://msdn.microsoft.com/virtualization/windowscontainers/quick_start/manage_powershell)\r\n* [Docker official documentation](https://docs.docker.com/)\r\n* [Docker Training](https://training.docker.com/)\r\n* [@botchagalupe’s kick-ass, 13 part Docker tutorial video series](https://www.youtube.com/watch?v=bV5vbNK3Uhw&list=PLkA60AVN3hh_6cAz8TUGtkYbJSL2bdZ4h)\r\n* ...and, a bunch of Windows Server 2016 TP3 stuff:\r\n\r\n    [Release Notes](https://technet.microsoft.com/library/dn765470.aspx?f=255&MSPPError=-2147217396)\r\n    [TechNet Library: What's New in Windows Server 2016 Technical Preview 3](https://technet.microsoft.com/library/dn765472.aspx)\r\n    [MVA Course: What's new in Windows Server 2016 Preview](https://www.microsoftvirtualacademy.com/en-US/training-courses/what-s-new-in-windows-server-2016-preview-12592)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}